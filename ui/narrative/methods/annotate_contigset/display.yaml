#
# Define basic display information
#
name     : Annotate Microbial Assembly

tooltip  : |
    Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).

screenshots :
    []

icon: rast-red.png

#
# Define the set of other narrative methods that should be suggested to the user.
#
suggestions :
    apps:
        related :
            []
        next :
            [build_fba_model, build_species_tree]
    methods:
        related :
            [build_metabolic_model]
        next :
            [annotate_domains_in_genome_generic]


#
# Configure the display and description of the parameters
#
parameters :
    input_contigset :
        ui-name : |
            Assembly
        short-hint : |
            An Assembly or ContigSet object to annotate
        long-hint  : |
            An Assembly or ContigSet object to annotate


    scientific_name :
        ui-name : |
            Scientific Name
        short-hint : |
            The scientific name to assign to the genome
        long-hint  : |
            The scientific name to assign to the genome

    domain :
        ui-name : |
            Domain
        short-hint : |
            The domain of life of the organism being annotated
        long-hint  : |
            The domain of life of the organism being annotated

    genetic_code :
        ui-name : |
            Genetic Code
        short-hint : |
            The genetic code used in translating to protein sequences
        long-hint  : |
            The genetic code used in translating to protein sequences

    call_features_rRNA_SEED :
        ui-name : |
            Call rRNAs
        short-hint : |
            Call rRNA non-coding features
        long-hint  : |
            Call rRNA non-coding features with RAST. See http://rast.nmpdr.org/ for more information

    call_features_tRNA_trnascan :
        ui-name : |
            Call tRNA trnascan
        short-hint : |
            Call tRNA non-coding feature
        long-hint  : |
           Call tRNA non-coding features with trnascan in RAST. See http://rast.nmpdr.org/ for more information

    call_selenoproteins :
        ui-name : |
            Call selenoproteins
        short-hint : |
            Call new selenoprotein-containing genes
        long-hint  : |
            Call new selenoprotein-containing genes with RAST. See http://rast.nmpdr.org/ for more information

    call_pyrrolysoproteins :
        ui-name : |
            Call pyrrolysoproteins
        short-hint : |
            Call new pyrrolysoprotein-containing genes
        long-hint  : |
            Call new pyrrolysoprotein-containing genes with RAST. See http://rast.nmpdr.org/ for more information

    call_features_repeat_region_SEED :
        ui-name : |
            Call SEED repeat region
        short-hint : |
            Call SEED-defined repeat regions
        long-hint  : |
            Call SEED-defined non-coding repeat regions. See http://rast.nmpdr.org/ for more information

    call_features_insertion_sequences :
        ui-name : |
            Call features insertion sequences
        short-hint : |
            Call non-coding features insertion sequences
        long-hint  : |
            Call non-coding features insertion sequences with RAST. See http://rast.nmpdr.org/ for more information

    call_features_strep_suis_repeat :
        ui-name : |
            Call strep suis repeats
        short-hint : |
            Call non-coding strep suis repeats
        long-hint  : |
            Call non-coding strep suis repeats with RAST. See http://rast.nmpdr.org/ for more information

    call_features_strep_pneumo_repeat :
        ui-name : |
            Call strep pneumo repeats
        short-hint : |
            Call non-coding strep pneumo repeats
        long-hint  : |
            Call non-coding strep pneumo repeats with RAST. See http://rast.nmpdr.org/ for more information

    call_features_crispr :
        ui-name : |
            Call crisprs
        short-hint : |
            Call non-coding crisprs
        long-hint  : |
            Call non-coding crisprs with RAST. See http://rast.nmpdr.org/ for more information

    call_features_CDS_glimmer3 :
        ui-name : |
            Call glimmer3
        short-hint : |
            Call CDS features with glimmer3
        long-hint  : |
            See http://rast.nmpdr.org/ for more information. WARNING: Calling new genes will delete existing genes. Glimmer will not run if all contigs < 2000nt.

    call_features_CDS_prodigal :
        ui-name : |
            Call prodigal
        short-hint : |
            Call CDS features with prodigal
        long-hint  : |
            See http://compbio.ornl.gov/prodigal/ for more information. WARNING: Calling new genes will delete existing genes.

    annotate_proteins_kmer_v2 :
        ui-name : |
            Annotate proteins kmer v2
        short-hint : |
            Annotate proteins kmer v2 with RAST
        long-hint  : |
            See http://rast.nmpdr.org/ for more information

    kmer_v1_parameters :
        ui-name : |
            Annotate proteins Kmer v1
        short-hint : |
            Annotate proteins kmer v1 with RAST
        long-hint  : |
            See http://rast.nmpdr.org/ for more information

    annotate_proteins_similarity :
        ui-name : |
            Annotate proteins similarity
        short-hint : |
            Annotate proteins similarity with RAST
        long-hint  : |
            See http://rast.nmpdr.org/ for more information

    retain_old_anno_for_hypotheticals :
        ui-name : |
            Retain old annotations for hypotheticals
        short-hint : |
            Retain old annotations for hypotheticals
        long-hint  : |
            Retain old annotations for hypotheticals

    resolve_overlapping_features :
        ui-name : |
            Resolve overlapping features
        short-hint : |
            Resolve overlapping features
        long-hint  : |
            See http://rast.nmpdr.org/ for more information

    call_features_prophage_phispy :
        ui-name : |
            Call features prophage phispy
        short-hint : |
            Call features prophage phispy with RAST
        long-hint  : |
            See http://rast.nmpdr.org/ for more information


    output_genome :
        ui-name : |
            Output Genome Name
        short-hint : |
            Name to assign the output genome


description : |
    <p>This app uses components from the RAST (<a href= "http://rast.nmpdr.org/">Rapid Annotations using Subsystems Technology</a>) toolkit to annotate an assembled bacterial or archaeal genome.  The required input - an Assembly or ContigSet object - can be generated using the <a data-method-id=“assemble_contigset_from_reads”>Assemble Contigs from Reads</a> app, uploaded from a GenBank file, or imported directly from NCBI via FTP.
    The app converts the FASTA file of contigs (the &quot;Contig Set&quot;) into a genome typed object, which is called a &quot;Genome&quot; in the data menu.</p>

    <p>There are three essential metadata fields that must be filled in: scientific name, domain, and genetic code. Most bacterial and archaeal genomes use genetic code 11, while Mycoplasmas use genetic code 4. For more information on genetic codes please refer to <a href="http://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi">this NCBI document</a>. All fields are required because they affect conditional parameters in various programs that are being run. Use existing scientific names whenever possible.</p>

    <p><a href="http://kbase.us/annotate-microbial-contigs-method/" target="_blank">Tutorial for Annotate Microbial Contigs</a></p>

    <p><strong>The Default Annotation Pipeline</strong><br>
    Clicking &quot;Run&quot; will run the default pipeline. For a typical 2-5 MBp genome, this should take about 5 minutes. The default pipeline consists of the following steps:</p>

    <ol>
    <li><i>Call rRNAs (default = on)</i><br>
    This is a custom BLAST-based tool.</li>

    <li><i>Call tRNAs with tRNAscan (default = on)</i><br>
    <a href="http://www.ncbi.nlm.nih.gov/pubmed/902310"a="a">More info</a></li>

    <li><i>Call selenoproteins (default = on)</i><br>
    This is a custom BLAST-based tool.</li>

    <li><i>Call pyrrolysylproteins (default = on)</i><br>
    This is a custom BLAST-based tool.</li>

    <li><i>Call large repeat regions (default = on)</i><br>
    This is a BLASTN search within the genome for regions greater than 95% nucleotide similarity greater than or equal to 100bp in length.</li>

    <li><i>Find insertion sequences (default = off)</i><br>
    This uses a series of BLAST searches to find insertion sequences by first looking for known insertion sequences, and then searching for inverted repeats with a transposase gene.</li>

    <li><i>Find Streptococcus repeat regions (default = contitional)</i><br>
    This is a conditional command that will only be implemented if the genus is Streptococcus. <a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3049150/">More info</a>.</li>

    <li><i>Call CRISPRs (default = on)</i><br>
    This is a custom tool that uses a perl regular expression-based search to find CRISPR elements.</li>

    <li><i>Call the protein-encoding genes with Prodigal and Glimmer3 (default = on)</i><br>
    See <a href="http://www.ncbi.nlm.nih.gov/pubmed/?term=20211023">Prodigal</a> and
    <a href="http://www.ncbi.nlm.nih.gov/pubmed/?term=17237039">Glimmer</a> for more info
    </li>

    <li><i>Annotate protein-encoding genes with k-mers (version 2; default = on)</i><br>
    This is a set of signature k-mers (amino acid 8-mers) built from the annotations in the <a href="http://core.theseed.org/FIG/seedviewer.cgi">CoreSEED</a>. The CoreSEED is a database of ~1,000 diverse microbial genomes and is currently the main focus of the RAST manual annotation efforts.  Annotating using this k-mer set provides the user with our most stable and best estimate of the core gene functions.</li>

    <li><i>Annotate remaining hypothetical proteins with k-mers (version 1; default = on)</i><br>
    This set of k-mers is built from the <a href="http://www.ncbi.nlm.nih.gov/pubmed/19762480">FigFam collection</a> in the PubSEED, which is the publically annotated version of the SEED database that consists of ~12,000 microbial genomes.  The &quot;classic&quot; version of RAST on the RAST website (rast.nmpdr.org) uses the FigFam-based k-mers (hence the version 1 designation).</li>

    <li><i>Annotate remaining hypothetical proteins by searching against close relatives (default = on)</i><br>
    We have several nonredundant databases for the most common genera.  If the genus name of your organism matches one of these, a search will be performed against the remaining hypothetical proteins to attempt to find a function.  The search uses a combination of BLAT and BLAST.</li>

    <li><i>Perform a basic gene overlap removal (default = on)</i><br>
    Using multiple gene calling algorithms can result in overlapping gene calls. This program is a custom tool that attempts to minimize overlaps and gaps to provide a set of calls that has a smaller number of gene calling errors. We do not recommend using overlap removal if you are attempting to annotate phage.</li>

    <li><i>Find close neighbors (default = on)</i><br>
    After the genome has been annotated, a BLASTP search using a set of unique proteins from the genome is used to find closely related genomes in KBase. The similarity is BLAST-based and should not be considered phylogenetic; however, this works well for quickly finding close relatives for downstream applications.

    <li><i>Find prophage elements with phispy (default = off)</i><br>
    This will use the phispy program to find prophage elements. <a href="http://www.ncbi.nlm.nih.gov/pubmed/?term=22584627">More information on phispy can be found here.</a>
    </li>
    </ol>
    </p>

    <p><strong>Advanced Annotation Options</strong><br>
    If you wish to customize your annotation, you can click the &quot;show advanced options&quot; link. This will display the full set of available annotation programs. There are currently two additional options,  &quot;Call features insertion sequences &quot; and &quot;Call features prophage phispy&quot;, which are left unchecked in the default pipeline because they are slower.  The insertion sequence finder is a custom BLAST-based script, and information on phispy can be found <a href="http://www.ncbi.nlm.nih.gov/pubmed/?term=22584627">here</a>.</p>

    <p><strong>GUI Output</strong><br>
    The GUI output currently consists of three tabs. The &quot;Overview&quot; tab provides basic information on the annotation job, the &quot;Contigs&quot; tab provides information on the contigs in the genome, and the &quot;Genes&quot; tab allows the user to scroll through the features that called. Users can sort on the various types of features. The features that get called can be controlled by using the advanced options.  Note that some features will overlap (e.g., &quot;prophage&quot; and &quot;CDS&quot;).</p>

    <p><strong>Additional Information</strong><br>
    For more information on the steps of the default RAStk pipeline please refer to our publication on this (publication forthcoming). For more detailed tutorial information and to explore the additional functionality of RASTtk not currently available in the Narrative interface please refer to <a href="http://tutorial.theseed.org">http://tutorial.theseed.org.</a></p>

    <p><strong>Team members who developed & deployed algorithm in KBase:</strong>
    Thomas Brettin, James Davis, Terry Disz, Robert Edwards, Chris Henry, Gary Olsen, Robert Olson, Ross Overbeek, Bruce Parrello, Gordon Pusch, Roman Sutormin, Fangfang Xia.
    Questions? Suggestions? Bug reports? Please <a href="http://kbase.us/contact-us/">contact us</a> and include the app name and error message (if any).
    </p>

publications :
    -
        display-text: |
            Aziz RK, Bartels D, Best AA, DeJongh M, Disz T, Edwards RA, et al. The RAST Server: Rapid Annotations using Subsystems Technology. BMC Genomics. 2008;9: 75. doi:10.1186/1471-2164-9-75
        link: https://www.ncbi.nlm.nih.gov/pubmed/18261238

    -
        display-text: |
            Brettin T, Davis JJ, Disz T, Edwards RA, Gerdes S, Olsen GJ, et al. RASTtk: a modular and extensible implementation of the RAST algorithm for building custom annotation pipelines and annotating batches of genomes. Sci Rep. 2015;5: 8365. doi:10.1038/srep08365
        link: https://www.ncbi.nlm.nih.gov/pubmed/25666585

    -
        display-text: |
            Overbeek R, Olson R, Pusch GD, Olsen GJ, Davis JJ, Disz T, et al. The SEED and the Rapid Annotation of microbial genomes using Subsystems Technology (RAST). Nucleic Acids Res. 2014;42: D206-214. doi:10.1093/nar/gkt1226
        link: https://www.ncbi.nlm.nih.gov/pubmed/?term=24293654
